---
title: "Brain structure: EDA"
format: html
editor: visual
---

```{r}
#| code-fold: true
#| label: load-packages
#| warning: false
#| message: false


library(tidyverse)
library(ggthemes)
library(RColorBrewer)
library(plotly)
library(pheatmap)
library(corrplot)
library(plotrix)
library(tastypie)

library(gplots)
library(ggmosaic)
library(treemapify)
library(ggridges)
library(ggalluvial)
library(scatterPlotMatrix)

library(readxl)
library(writexl)

library(kableExtra)
library(multcomp)
library(agricolae)
library(factoextra)
library(FactoMineR)

```

# Cargamos el conjunto de datos

```{r}
#| code-fold: true

datos <-  read_excel("./Data_input/Table S5_537.xlsx")
datos$Gene_name <- factor(datos$Gene_name)
datos$Enriched_brain_structure <- factor(datos$Enriched_brain_structure)
datos$Enriched_species <- factor(datos$Enriched_species)


datos <- datos |> dplyr::mutate(across(Cerebrum_H:Cerebellum_M, ~ .x + 1))
datos <- datos |> dplyr::mutate(across(Cerebrum_H:Cerebellum_M, log10))
glimpse(datos)

```

## Resumen estadístico

```{r}
#| code-fold: true

summary(datos)


```

# Distribución de variables cualitativas

## Gráfica de barras

### Enriched_brain_structure

```{r}
#| code-fold: true
barplot_1 <- ggplot(datos) +
  geom_bar(aes(Enriched_brain_structure, fill=Enriched_species), color="black") +
  labs(
    title = "Enriched brain structure",
    x = "Enriched brain structure", y = "Count",
    fill = "Enriched species"
  ) +
  scale_fill_hue()+
  theme_bw()+
  theme(
    #legend.position="top",
    #legend.position = c(.95, .95),
    #legend.justification = c("right", "top"),
    #legend.box.just = "right",
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13)
  )

barplot_1

```

### Enriched_species

```{r}
#| code-fold: true
barplot_2 <- ggplot(datos) +
  geom_bar(aes(Enriched_species, fill=Enriched_brain_structure), color="black") +
  labs(
    title = "Enriched species",
    x = "Enriched species", y = "Count",
    fill = "Brain structure"
  ) +
  scale_fill_hue()+
  theme_bw()+
  theme(
    #legend.position="top",
    #legend.position = c(.95, .95),
    #legend.justification = c("right", "top"),
    #legend.box.just = "right",
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12, angle=45, vjust=0.9, hjust=0.9),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13)
  )

barplot_2

```

### Alluvialplot

```{r}
#| code-fold: true


datos_alluvia <- datos |> dplyr::select(Enriched_species, Enriched_brain_structure) |> 
  group_by(Enriched_brain_structure, Enriched_species) |> 
  summarize(frequency = n(), .groups = "drop")

ggplot(datos_alluvia, aes(y = frequency, axis1 = Enriched_species, axis2 = Enriched_brain_structure )) +
  geom_alluvium(aes(fill = Enriched_species), width = 1/3, color = "black") +
  geom_stratum(width = 1/3, fill = "black", color = "grey") +
  geom_text(stat = "stratum", aes(label = after_stat(stratum)), color = "white", size = 3) +
  scale_x_discrete(limits = c("Species", "Brain structure"), expand = c(.05, .05)) +
  scale_fill_brewer(type = "qual", palette = "Dark2") + 
  theme_minimal()

```

# Distribución de variables cuantitativas

## Gráficas de densidad

```{r}
#| code-fold: true


num_var <- dplyr::select(datos, Cerebrum_H:Cerebellum_M) |> names() 

for (hvar in num_var) {
grafica <- ggplot(datos)+
      geom_density(aes(eval(as.name(hvar)), fill=Enriched_brain_structure), alpha=0.5, color='gray')+ 
        labs(x=hvar)+
        scale_fill_colorblind()+
        theme_bw()
        print(grafica)
        
}



```

# Correlación

```{r}
#| code-fold: true

data_num <- datos |> dplyr::select(Cerebrum_H:Cerebellum_M)
#data_num <- data_num[complete.cases(data_num), ]  
cor_mat <- cor(data_num)
cor_mat
```

```{r}
#| code-fold: true

pheatmap(cor_mat)
corrplot(cor_mat)
corrplot(cor_mat, method = "color")
corrplot(cor_mat, method = "color", order = "AOE")
corrplot(cor_mat, method = "color", order = "FPC", type="lower")
```

# Heatmap

```{r}
#| code-fold: true



data_matrix <- datos |> dplyr::select(Cerebrum_H:Cerebellum_M) |> as.matrix()
dm_dim <- dim(data_matrix)
rownames(data_matrix) <- datos$Gene_name


row_annot <- dplyr::select(datos, Enriched_brain_structure, Enriched_species) |> as.data.frame()
rownames(row_annot) <- datos$Gene_name


mapa <- pheatmap(data_matrix, 
         border_color = NA, 
         scale = "none",
         clustering_distance_rows = "euclidean", 
         cutree_rows = 5,
         treeheight_col=10,
         clustering_distance_cols = "euclidean", 
         clustering_method = "ward.D2", 
         #color= hcl.colors(10, "Spectral"),
         #breaks = c(-3, 0, 3, 6, 9, 12, 15),
         drop_levels = TRUE,
         show_colnames = T, 
         show_rownames = F,
         annotation_row = row_annot)
         
         #,
         #annotation_colors = cond_color)

mapa

#ggsave("heatmap_1.jpg", mapa, scale=1, dpi = 320)
```

# Relación entre variables numéricas y categóricas

### Boxplots

```{r}
#| code-fold: true




for (val_y in num_var) {
  box_graf <- ggplot(datos)+
    geom_boxplot(aes(x=Enriched_brain_structure, y=eval(as.name(val_y)), color = Enriched_species), show.legend = TRUE)+
    #geom_jitter(aes(x=Enriched_brain_structure, y=eval(as.name(val_y)) ), color="firebrick", alpha=0.5)+
    #stat_summary(aes(x=Enriched_brain_structure, y=eval(as.name(val_y))),fun.y=mean, geom="point", shape=20, size=5, color="red", fill="red") +
    labs(y=val_y)+
    theme_bw()
  
  print(box_graf)
}





```

# PCA

## Resultados

::: panel-tabset
### Eigenvalores y varianzas

```{r}
#| code-fold: true



PC_total <- prcomp(data_num, scale.=TRUE, center=TRUE)

eig_total <- get_eigenvalue(PC_total)
eig_tabla <- data.frame(PC=paste0("PC",1:dim(eig_total)[1]), 
                        Eigenvalor=round(eig_total$eigenvalue,3), 
                        Varianza=round(eig_total$variance.percent,2), 
                        Var_acu=round(eig_total$cumulative.variance.percent,2))

kable(eig_tabla, align = "c", col.names = c("Componente", "Eigenvalor", "% varianza", "% varianza acumulada")) %>% kable_styling(c("striped", "hover"), full_width = F)%>% scroll_box(width="100%", height="300px", fixed_thead = TRUE)
```

### Scree plot

```{r}
#| code-fold: true
fviz_eig(PC_total, addlabels = TRUE)
```

### Coeficientes (Loadings)

```{r}
#| code-fold: true
PC_coef <-data.frame(PC_total$rotation)
kable(PC_coef, align = "c") %>% kable_styling(c("striped", "hover"), full_width = F)%>% scroll_box(width="100%", height="300px", fixed_thead = TRUE)
```

### Contribución variables

```{r}
#| code-fold: true
fviz_pca_var(PC_total, col.var = "contrib", gradient.cols=c("#1627dc", "#ffb600", "#ff2e16"))
```

### Contribución PC1

```{r}
#| code-fold: true
fviz_contrib(PC_total, "var", axes = 1)
```

### Contribución PC2

```{r}
#| code-fold: true
fviz_contrib(PC_total, "var", axes = 2)
```
:::

## Proyecciones

::: panel-tabset
### Biplot structure

```{r}
#| code-fold: true
fviz_pca_biplot(PC_total,
                geom.ind = "point",
                fill.ind = datos$Enriched_brain_structure,
                pointshape = 21 ,
                pointsize = 2,
                alpha.ind=0.6,
                col.var = "black",
                #palette= ,
                label= "var",
                repel = TRUE   
  )
```

### Biplot Species

```{r}
#| code-fold: true
fviz_pca_biplot(PC_total,
                geom.ind = "point",
                fill.ind = datos$Enriched_species,
                pointshape = 21 ,
                pointsize = 2,
                alpha.ind=0.6,
                col.var = "black",
                #palette= ,
                label= "var",
                repel = TRUE   
  )
```

### Proyección Structure

```{r}
#| code-fold: true
proy_scores <- fviz_pca_ind(PC_total,
             pointsize = 2,
             habillage =datos$Enriched_brain_structure,
             #addEllipses = TRUE,
             label= "var",
            repel = TRUE 
  )

ggplotly(proy_scores)
```

### Proyección Species

```{r}
#| code-fold: true
proy_scores <- fviz_pca_ind(PC_total,
             pointsize = 2,
             habillage =datos$Enriched_species,
             #addEllipses = TRUE,
             label= "var",
            repel = TRUE 
  )

ggplotly(proy_scores)
```
:::

# Datos transpuesta

```{r}
#| code-fold: true

data_t <- datos |> dplyr::select(Cerebrum_H:Cerebellum_M)
data_t <- t(data_t)
colnames(data_t) <- datos$Gene_name
data_t <- as.data.frame(data_t)
data_t <- data_t |> mutate(SB=rownames(data_t), Species= rep(c("H", "P", "M"), each=4), .before=1)
#data_t$SB <- factor(data_t$SB)
data_t$Species <- factor(data_t$Species)

```

```{r}
#| code-fold: true
num_var <- data_t |> dplyr::select(where(is.numeric)) |> names() 

for (hvar in num_var[1:10]) {
grafica <- ggplot(data_t)+
      geom_point(aes(SB, y=eval(as.name(hvar)), color=Species))+ 
        labs(y =hvar)+
        theme_bw()+
  theme(
    #legend.position="top",
    #legend.position = c(.95, .95),
    #legend.justification = c("right", "top"),
    #legend.box.just = "right",
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12, angle=45, vjust=0.9, hjust=0.9),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13)
  )
        print(grafica)
        
}



```

# Heatmap

```{r}
#| code-fold: true



data_matrix <- data_t|> dplyr::select(where(is.numeric)) |> as.matrix()
dm_dim <- dim(data_matrix)
rownames(data_matrix) <- data_t$SB


row_annot <- dplyr::select(data_t,Species) |> as.data.frame()
row_annot <- row_annot |> dplyr::mutate(SB=rep(c("Cerebrum", "Hypothalamus", "Brainstem", "Cerebellum"), 3), .before=1)
rownames(row_annot) <- data_t$SB


mapa <- pheatmap(data_matrix, 
         border_color = NA, 
         scale = "none",
         clustering_distance_rows = "euclidean", 
         cutree_rows = 4,
         treeheight_col=10,
         clustering_distance_cols = "euclidean", 
         clustering_method = "ward.D2", 
         #color= hcl.colors(10, "Spectral"),
         #breaks = c(-3, 0, 3, 6, 9, 12, 15),
         drop_levels = TRUE,
         show_colnames = F, 
         show_rownames = F,
         annotation_row = row_annot)
         
         #,
         #annotation_colors = cond_color)

mapa

#ggsave("heatmap_1.jpg", mapa, scale=1, dpi = 320)
```
